---
import type IssueType from "../../types/issue";
import type IconType from "../../types/icon";
import type NavItemType from "../../types/navItem";
import type LinkType from "../../types/link";

import TopHeader from "./TopHeader.astro";
import BottomHeader from "./BottomHeader.astro";
import Navigator from "./Navigator.astro";

interface Props {
    title: string;
    logo: IconType;
    issues: IssueType[];
    arrow: IconType;
    navs: NavItemType[];
    pittogramma: IconType;
    links: LinkType[];
    navFooter: {
        title: string;
        content: string;
    };
}

const { title, logo, issues, arrow, navs, pittogramma, navFooter, links } = Astro.props;
---

<header id="header" class="md:sticky top-0 left-0 right-0 text-[12px] md:text-[14px] z-50 gt-america-light bg transition-all duration-500">
    <TopHeader title={title} logo={logo} />
    <BottomHeader issues={issues} icon={arrow} links={links} />
    <Navigator navs={navs} icon={pittogramma} navFooter={navFooter} />
</header>

<style>
    .translate-all {
        transform: translateY(-100%);
    }   
</style> 

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const header = document.getElementById('header');
        const isMobile = window.innerWidth < 768;
        let lastScroll = 0;

        if(!header || !isMobile) return;

        window.addEventListener('scroll', () => {
            const currentScroll = window.scrollY;
            if (currentScroll > lastScroll) {
                setTimeout(() => {
                    header.classList.remove('sticky');
                }, 300);
                header.classList.add('translate-all');
            } else {
                header.classList.add('sticky');
                header.classList.remove('translate-all');
            }
            lastScroll = currentScroll <= 0 ? 0 : currentScroll;
        });
    });
</script>